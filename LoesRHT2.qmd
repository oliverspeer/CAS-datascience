# Arbeitsblatt HT2 {.unnumbered}

## Aufgabe 1 Segelflugunfälle

```{r}
# im Durchschnitt 4.21 Unfälle pro Jahr. poisson-Verteilung mit lambda = 4.21
# 1. Wahrscheinlichkeit für 7 Unfälle beim Niveau 0.05
# Faustregel P1 lambda +- 2*sqrt(lambda)
lambda <- 4.21
round(lambda + c(-1, 1)*2*sqrt(lambda), 2)
round(lambda + c(-2, 2)*sqrt(lambda), 2)

```

Interpretation: nach der Faustregel P1 liegt der Annahmebereich der jährlichen Segelflugunfälle zwischen 1 und 8. Nach der Faustregel P1 sind 7 Unfälle also plausibel.

## Aufgabe 2 Erdbeben

### a) 95% Zufalls-Streubereich mit Fausregel P1 = lambda +- 2 x Wurzel(lambda)

Nullhypothese: In einem bestimmten Zeitraum werden im Mittel 64 Erdbeben beobachtet. Eine Beobachtung von 80 Erdbeben in diesem Zeitraum sind damit vereinbar.

```{r}
eq <- 64 + c(-2, 2) * sqrt(64)
eq
```

Damit gibt es keine Evidenz gegen die Nullhypothese.

Und mit dem P-Test:

```{r}
poisson.test(x = 80, r = 64)
```

### b)

```{r}
poisson.test(x = 8)
```

### c)

### Faustregel P2 = x +- 2 x Wurzel(x) für den Vertrauensintervall

### Faustregel P2\` = x + 2 +- 2 x Wurzel(x+1)

```{r}
p2 <- 8 + c(-2,2)*sqrt(8)
p2s <- 8 + 2 + c(-2,2)*sqrt(8+1)
p2
p2s

```

### d)

```{r}
p2 <- 50 + c(-2,2)*sqrt(50)
p2
p2s <- 50 + 2 + c(-2,2)*sqrt(50+1)
p2s
poisson.test(50)
```

# Aufgabe 3 Konfidenzintervalle

## 3a)

### Faustregel P2 für den Vertrauensintervall
$$
P2 = x \pm 2 \times \sqrt{x} 
$$



für Poisson sei 

z Summe aller Ereignisse,

n Summe der Beobachtungen/Intervalle

$$
P2 = \frac{z \pm 2 \times \sqrt{z}}{n}
$$

=

$$
P2 = \frac{z}{n} \pm 2 \times \sqrt{\frac{z}{n^2}}
$$   
$$
\begin{aligned}
P2 &= \frac{z \pm 2 \times \sqrt{z}}{n} \\
   &= \frac{z}{n} \pm 2 \times \sqrt{\frac{z}{n^2}}
\end{aligned}
$$

### Faustregel P2'
$$
P2 = x +2 \pm 2 \times \sqrt{x+1} 
$$
für Poisson:
$$
\begin{aligned}
P2' &= \frac{z + 2 \pm 2 \times \sqrt{z + 1}}{n} \\
    &= \frac{z +2}{n} \pm \frac{2}{n} \times \sqrt{ \frac{z+1}{n^2}}
\end{aligned}    
$$



### alpha Zerfälle
```{r}
alpha <- read.table("alpha.dat", header = TRUE)
alpha
```



Anzahl aller beobachteten Ereignisse
```{r}
z <- sum(alpha$k*alpha$freq)
z
```


Summe aller Beobachtungen
```{r}
n <- sum(alpha$freq)
n
```



Poisson Test zum Berechnen des Konfidenz Intervalls
```{r}
pt <- poisson.test(z,n)
pt
# Poisson Test lässt sich auch nachträglich weiter berechnen
pt.gpt <- poisson.test(z,1)
pt.gpt.ci <- pt.gpt$conf.int/n

```



### Faustregel P2 im Vergleich zum exakteren Poisson Test
```{r}
P2 <- z/n +c(-2,2)*sqrt(z/n^2)
P2s <- (z + 2 + c(-2,2)*sqrt(z+1))/n
pt$conf.int
pt.gpt.ci
P2
P2s
```

### Verkehr
```{r}
verkehr <- read.table("verkehr.dat", header = TRUE)
P2.vk <- (sum(verkehr$k * verkehr$freq) + c(-2,2) * sqrt(sum(verkehr$k * verkehr$freq)))/sum(verkehr$freq)
P2s.vk <- (sum(verkehr$k*verkehr$freq)+2+c(-2,2)*sqrt(sum(verkehr$k*verkehr$freq)+1))/sum(verkehr$freq)
pt.vk <- poisson.test(sum(verkehr$k*verkehr$freq), sum(verkehr$freq))
P2.vk
P2s.vk
pt.vk$conf.int

```

### Asbest Fasern
```{r}
asbest1 <- read.table("asbest1.dat", header = F)
asbest2 <- read.table("asbest2.dat", header = F)
freq.asb1 <- table(asbest1$V1)
# list and order unique values of asbest1 
k.asb1 <- sort(unique(asbest1$V1))
asb1.df <- as.data.frame(cbind(k.asb1, freq.asb1))
asb1.df
f1 <- sum(asb1.df$k.asb1*asb1.df$freq.asb1)
b1 <- sum(asb1.df$freq.asb1)
pt.asb1 <- poisson.test(f1, b1)
P2.asb1 <- (f1 + c(-2,2)*sqrt(f1))/b1
P2s.asb1 <- (f1 + 2 + c(-2,2)*sqrt(f1+1))/b1
pt.asb1
P2.asb1
P2s.asb1
```
### eleganterer Weg
```{r}
a1 <- asbest1[,1]
pt.a1 <- poisson.test(sum(a1), length(a1))
pt.a1$conf.int

a2 <- asbest2[,1]
pt.a2 <- poisson.test(sum(a2), length(a2))
P2.a2 <- sum(a2)/length(a2) + c(-2,2)*sqrt(sum(a2)/length(a2)^2)
P2s.a2 <- ((sum(a2)+2) + c(-2, 2)*(sqrt(sum(a2)+1)))/length(a2)
pt.a2$conf.int
P2.a2
P2s.a2

```

# Aufgabe 4 Dispersionstest
## alpha Zerfälle
### Bootstrap
```{r}
alpha.z <- rep(alpha$k, alpha$freq)
f.disp <- function(x, ind){
  xx <- x[ind]
  var(xx)/mean(xx)
}
library(boot)
set.seed(seed=117)  ## "Startwert" für den Pseudo-Zufallszahlengenerator
alpha.boot2 <- boot(alpha.z, f.disp, R=4999, stype="i")
alpha.boot.ci <- boot.ci(alpha.boot2, conf=0.95, type="perc")
alpha.boot.ci
```

