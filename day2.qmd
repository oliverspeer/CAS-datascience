# Day 02 13.09.2023 {.unnumbered}

### logische Operationen mit boolschen Operatoren ! \< = \> & \|

```{r}
a <- c(T, T, F, F)
b <- c(T, F, T, F)

sum(a)
sum(b)
5*a
5*b
a+b
a & b
a | b
!a | b
b | !a
!a
(a|b)+(a&b)

v <- c(160, 145, 195, 173, 181)
min(v - 150)
max(log(v - 150)) < 1
min(v - 150) > 0 && max(log(v - 150)) < 1
```

#### *logische Operation vom Feinsten*

```{r}
v <- c(3, NA, 5, NA, 6)
2*(!is.na(v))+is.na(v)
```

## Verschiedene graphische Darstellung absoluter und relativer Häufigkeiten

### Arbeitsblatt 3

#### Aufgabe 1

```{r}
file.path <- "imports85.txt"
imports85 <- read.table(file.path, header = T)
table(imports85$cyl, imports85$wheels)
imports85$cyl <- factor(imports85$cyl, levels = c("two", "three", "four", "five", "six", "eight", "twelve"))
prop.cyl.wheel <- round(prop.table(table(imports85$cyl, imports85$wheels)), 2)
print(prop.cyl.wheel*100)
```

### Mosaicplot

```{r}
mosaicplot(prop.cyl.wheel, color = 2:9)
```

### Barplot

```{r}
barplot(prop.cyl.wheel)
barplot(prop.cyl.wheel, beside = T)
```

#### Aufgabe 1c

#### DDarstellung der Beziehung zwischen Preis und Zylinderzahl

```{r}
table(imports85$price, imports85$cyl)
barplot(table(imports85$price, imports85$cyl))
plot(imports85$cyl, imports85$price)
plot(imports85$price, imports85$cyl)
```

### ECDF Plot

\*\* *E* mpirical *C* umulative *D* istribution *F* untion \*\*

```{r}
plot(ecdf(imports85$price))
plot(ecdf(imports85$cyl), 
     verticals = T, 
     col.points = "navy", 
     lwd = 2, 
     col.hor = "red", 
     col.vert = "bisque")
plot(ecdf(imports85$city.mpg))
```

### Histogramm

```{r}
hist(imports85$city.mpg)
```

### Strip Plot

```{r}
stripchart(imports85$city.mpg, method = "jitter")
stripchart(imports85$city.mpg, method = "stack")
```

## Befehle um Tabellen / Daten anzuschauen

```{r}
head(imports85)
dim(imports85)
ncol(imports85)
nrow(imports85)
colnames(imports85)
str(imports85)

```

## Farben

Farben einstellen über hex code: <https://www.html-color.codes>

oder R "colors"

```{r}
colors()
```

oder im www R colors

## read.table

read.table liest generisch ein, read.csv etc sind wrapper, die dann read.table aufrufen.

## working directory

Working direktory

setwd() getwd()

zum löschen rm()
